; Generated by JITX 3.24.1
#use-added-syntax(jitx)
defpackage main :
  import core
  import jitx
  import jitx/commands
  import jitx/parts

  import helpers
  import jsl/symbols/net-symbols

  import ethernet-io/controller

; Define the shape/size of the board
val board-shape = RoundedRectangle(30.0, 18.5, 0.25)

pcb-module communications-core :
  inst zener : create-part(mpn = "MMSZ4689T1G", manufacturer = "ON Semiconductor")
  inst usb-if : connectors/components/USB/USBTypeC/USBC-HighSpeed-Iface()

  net (zener.A usb-if.VDD-USB.V-)
  net (zener.K usb-if.VDD-USB.V+)

  inst ctl : controller

  net (ctl.USB usb-if.USB)
  net (ctl.VDD-USB usb-if.VDD-USB)
  
; Module to run as a design
pcb-module top-level :
  inst core : communications-core

; Set the :
;     design-name     - a directory with this name will be created in the "designs" directory
;     board           - a Board object representing the stackup, rules and board shape for a particular design
;     signal-shrink   - a distance in mm to pull back copper signals from the board edge
setup-design("jitx-design", board-shape, signal-shrink = 0.5)

; Set the top level module (the module to be compile into a schematic and PCB)
set-main-module(top-level)

; View the results
; take a look at the BOM that was generated
view-bom(BOM-STD)
; examine the schematic that was auto-generated
view-schematic()
; view the board that was created
view-board()


